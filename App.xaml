<Application x:Class="QuickTasks.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:QuickTasks"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--main colors-->
        <SolidColorBrush x:Key="fgColor" Color="NavajoWhite" />
        <SolidColorBrush x:Key="bgColor" Color="#FF33343B" />
        <SolidColorBrush x:Key="nColor" Color="DarkRed" />
        <SolidColorBrush x:Key="yColor" Color="DarkGreen" />
        <SolidColorBrush x:Key="dfgColor" Color="LightGray" />
        <SolidColorBrush x:Key="dbgColor" Color="#FF999999" />

        <!--Window style-->
        <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
            <Setter Property="Width" Value="250" />
            <Setter Property="SizeToContent" Value="Height" />
            <Setter Property="Foreground" Value="{StaticResource fgColor}"/>
            <Setter Property="Background" Value="{StaticResource bgColor}"/>
            <Setter Property="ResizeMode" Value="NoResize" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <!--Duplication: UserControls are not Windows (aw c'mon!...)-->
        <Style x:Key="UCStyle" TargetType="{x:Type UserControl}">
            <Setter Property="Width" Value="250" />
            <Setter Property="Foreground" Value="{StaticResource fgColor}"/>
            <Setter Property="Background" Value="{StaticResource bgColor}"/>
        </Style>

        <!--Label styles-->
        <Style x:Key="labelStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource fgColor}"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding" Value="5 0" />
        </Style>
        <Style x:Key="titleStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource labelStyle}" >
            <Setter Property="FontSize" Value="9" />
        </Style>
        <Style x:Key="dialogStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource labelStyle}" >
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        
        <!--Button styles-->
        <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{StaticResource fgColor}" />
            <Setter Property="Background" Value="{StaticResource bgColor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="Foreground" Value="{StaticResource bgColor}" />
                    <Setter Property="Background" Value="{StaticResource fgColor}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource dbgColor}" />
                    <Setter Property="Foreground" Value="{StaticResource dfgColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NoBtnStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Background" Value="{StaticResource nColor}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource nColor}" />
                    <Setter Property="Background" Value="{StaticResource fgColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="YesBtnStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource buttonStyle}">
            <Setter Property="Background" Value="{StaticResource yColor}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource yColor}" />
                    <Setter Property="Background" Value="{StaticResource fgColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
